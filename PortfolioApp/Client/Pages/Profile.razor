@page "/profile"
@using PortfolioApp.Shared.Models
@inject IAuthService AuthService
@inject NavigationManager Navigation
@inject ISnackbar Snackbar
@attribute [Authorize]

<PageTitle>My Profile</PageTitle>

<MudContainer MaxWidth="MaxWidth.Large" Class="mt-6">
    <MudText Typo="Typo.h3" Class="mb-4">My Profile</MudText>

    @if (_loading)
    {
        <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
    }
    else if (_userInfo == null)
    {
        <MudAlert Severity="Severity.Error">Failed to load profile information.</MudAlert>
    }
    else
    {
        <MudGrid>
            <MudItem xs="12" md="4">
                <MudCard>
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">Profile Picture</MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent>
                        <div class="d-flex justify-center mb-4">
                            @if (string.IsNullOrEmpty(_userInfo.ProfileImageUrl))
                            {
                                <MudAvatar Color="Color.Primary" Size="Size.Large" Style="height: 150px; width: 150px;">
                                    <MudText Typo="Typo.h3">@GetInitials()</MudText>
                                </MudAvatar>
                            }
                            else
                            {
                                <MudAvatar Size="Size.Large" Style="height: 150px; width: 150px;">
                                    <img src="@_userInfo.ProfileImageUrl" alt="Profile Picture" />
                                </MudAvatar>
                            }
                        </div>
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" FullWidth="true" 
                                  OnClick="@(() => UploadPictureDialog())">
                            Change Picture
                        </MudButton>
                    </MudCardContent>
                </MudCard>
            </MudItem>
            <MudItem xs="12" md="8">
                <MudCard>
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">Profile Information</MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudForm @ref="_form" Model="@_profileModel" @bind-IsValid="@_success">
                            <MudGrid>
                                <MudItem xs="12" md="6">
                                    <MudTextField @bind-Value="_profileModel.FirstName" 
                                                 Label="First Name" Required="true" RequiredError="First name is required"
                                                 Immediate="true" />
                                </MudItem>
                                <MudItem xs="12" md="6">
                                    <MudTextField @bind-Value="_profileModel.LastName" 
                                                 Label="Last Name" Required="true" RequiredError="Last name is required"
                                                 Immediate="true" />
                                </MudItem>
                                <MudItem xs="12">
                                    <MudTextField @bind-Value="_profileModel.Title" 
                                                 Label="Professional Title" Required="false"
                                                 Placeholder="e.g., Full Stack Developer" />
                                </MudItem>
                                <MudItem xs="12">
                                    <MudTextField @bind-Value="_profileModel.Location" 
                                                 Label="Location" Required="false"
                                                 Placeholder="e.g., New York, NY" />
                                </MudItem>
                                <MudItem xs="12">
                                    <MudTextField @bind-Value="_profileModel.Bio" 
                                                 Label="Bio" Required="false" Lines="4"
                                                 Placeholder="Tell us about yourself" />
                                </MudItem>
                                <MudItem xs="12" md="6">
                                    <MudTextField @bind-Value="_profileModel.GitHubUrl" 
                                                 Label="GitHub URL" Required="false"
                                                 Placeholder="https://github.com/yourusername" />
                                </MudItem>
                                <MudItem xs="12" md="6">
                                    <MudTextField @bind-Value="_profileModel.LinkedInUrl" 
                                                 Label="LinkedIn URL" Required="false"
                                                 Placeholder="https://linkedin.com/in/yourusername" />
                                </MudItem>
                                <MudItem xs="12" md="6">
                                    <MudTextField @bind-Value="_profileModel.TwitterUrl" 
                                                 Label="Twitter URL" Required="false"
                                                 Placeholder="https://twitter.com/yourusername" />
                                </MudItem>
                                <MudItem xs="12" md="6">
                                    <MudTextField @bind-Value="_profileModel.Email" 
                                                 Label="Email" Required="true" RequiredError="Email is required"
                                                 Immediate="true" ReadOnly="true"
                                                 HelperText="Email cannot be changed" />
                                </MudItem>
                            </MudGrid>
                        </MudForm>
                    </MudCardContent>
                    <MudCardActions>
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" 
                                  OnClick="SaveProfile" Disabled="@(!_success || _saving)">
                            @if (_saving)
                            {
                                <MudProgressCircular Size="Size.Small" Indeterminate="true" Class="mr-2" />
                                <span>Saving</span>
                            }
                            else
                            {
                                <span>Save Changes</span>
                            }
                        </MudButton>
                    </MudCardActions>
                </MudCard>
            </MudItem>
        </MudGrid>
    }
</MudContainer>

@code {
    private bool _loading = true;
    private bool _saving = false;
    private bool _success = false;
    private UserInfoResponse? _userInfo;
    private ProfileModel _profileModel = new();
    private MudForm? _form;

    protected override async Task OnInitializedAsync()
    {
        await LoadUserProfile();
    }

    private async Task LoadUserProfile()
    {
        _loading = true;
        _userInfo = await AuthService.GetUserInfo();
        
        if (_userInfo != null)
        {
            _profileModel = new ProfileModel
            {
                FirstName = _userInfo.FirstName,
                LastName = _userInfo.LastName,
                Title = _userInfo.Title,
                Email = _userInfo.Email,
                ProfileImageUrl = _userInfo.ProfileImageUrl
                // Other properties would be loaded from a profile service
            };
        }
        
        _loading = false;
    }

    private async Task SaveProfile()
    {
        if (!_success)
        {
            return;
        }

        _saving = true;
        
        // Save profile using a profile service
        await Task.Delay(1000); // Simulate API call
        
        Snackbar.Add("Profile updated successfully", Severity.Success);
        _saving = false;
    }

    private void UploadPictureDialog()
    {
        // Implement file upload dialog
        Snackbar.Add("Profile picture upload not implemented yet", Severity.Info);
    }

    private string GetInitials()
    {
        if (_userInfo == null)
        {
            return "?";
        }

        string initials = "";
        
        if (!string.IsNullOrEmpty(_userInfo.FirstName))
        {
            initials += _userInfo.FirstName[0];
        }
        
        if (!string.IsNullOrEmpty(_userInfo.LastName))
        {
            initials += _userInfo.LastName[0];
        }
        
        return initials.ToUpper();
    }

    private class ProfileModel
    {
        public string FirstName { get; set; } = string.Empty;
        public string LastName { get; set; } = string.Empty;
        public string Title { get; set; } = string.Empty;
        public string Email { get; set; } = string.Empty;
        public string Location { get; set; } = string.Empty;
        public string Bio { get; set; } = string.Empty;
        public string GitHubUrl { get; set; } = string.Empty;
        public string LinkedInUrl { get; set; } = string.Empty;
        public string TwitterUrl { get; set; } = string.Empty;
        public string ProfileImageUrl { get; set; } = string.Empty;
    }
}