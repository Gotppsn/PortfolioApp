@inject ProjectService ProjectService
@inject IJSRuntime JSRuntime

<div class="bg-white dark:bg-gray-800 shadow-xl rounded-xl overflow-hidden">
    <div class="h-12 bg-gradient-to-r from-blue-600 to-indigo-600 flex items-center px-6 justify-between">
        <div class="flex items-center">
            <span class="w-3 h-3 rounded-full bg-red-500 mr-2"></span>
            <span class="w-3 h-3 rounded-full bg-yellow-500 mr-2"></span>
            <span class="w-3 h-3 rounded-full bg-green-500"></span>
        </div>
        <div class="flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-white/20 backdrop-blur text-white">
            @snippet.Language
        </div>
    </div>
    <div class="p-6">
        <div class="mb-6">
            <button @onclick="OnBack" class="text-blue-600 hover:underline flex items-center group">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1 transform transition-transform group-hover:-translate-x-1" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
                </svg>
                Back to all snippets
            </button>
        </div>

        <div class="flex flex-col md:flex-row justify-between items-start md:items-center mb-6">
            <h1 class="text-2xl font-bold text-gray-800 dark:text-white">@snippet.Title</h1>
            <div class="mt-2 md:mt-0 flex space-x-2">
                <button @onclick="CopyCode" class="bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-200 px-3 py-1 rounded-md flex items-center hover:bg-blue-200 dark:hover:bg-blue-800/30 transition-colors">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" viewBox="0 0 20 20" fill="currentColor">
                        <path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z" />
                        <path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z" />
                    </svg>
                    Copy Code
                </button>
            </div>
        </div>

        <div class="mb-6">
            <div class="text-gray-600 dark:text-gray-300 mb-4">@snippet.Description</div>
            <div class="bg-gray-100 dark:bg-gray-700 rounded-lg p-4">
                <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                    <div class="flex items-center">
                        <span class="font-medium text-gray-700 dark:text-gray-300 mr-2">Language:</span>
                        <span class="bg-blue-100 text-blue-800 text-xs px-2.5 py-1 rounded-full font-medium dark:bg-blue-900/30 dark:text-blue-300">
                            @snippet.Language
                        </span>
                    </div>
                    <div class="flex items-center">
                        <span class="font-medium text-gray-700 dark:text-gray-300 mr-2">Created:</span>
                        <span class="text-gray-600 dark:text-gray-400">@snippet.CreatedDate.ToString("MMM dd, yyyy")</span>
                    </div>
                    @if (snippet.UpdatedDate.HasValue)
                    {
                        <div class="flex items-center">
                            <span class="font-medium text-gray-700 dark:text-gray-300 mr-2">Updated:</span>
                            <span class="text-gray-600 dark:text-gray-400">@snippet.UpdatedDate.Value.ToString("MMM dd, yyyy")</span>
                        </div>
                    }
                </div>
            </div>
            <div class="flex flex-wrap mt-3">
                @foreach (var tag in snippet.Tags)
                {
                    <span class="bg-blue-100 text-blue-800 text-xs font-medium mr-2 mb-2 px-2.5 py-1 rounded-full dark:bg-blue-900/30 dark:text-blue-300">
                        @tag
                    </span>
                }
            </div>
        </div>

        <div class="bg-gray-900 rounded-lg overflow-hidden shadow-lg">
            <div class="flex justify-between items-center px-4 py-2 bg-gray-800">
                <div class="text-sm text-gray-300 font-mono">@snippet.Language</div>
                <button @onclick="CopyCode" class="text-gray-300 hover:text-white transition-colors">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                        <path d="M8 2a1 1 0 000 2h2a1 1 0 100-2H8z" />
                        <path d="M3 5a2 2 0 012-2 3 3 0 003 3h2a3 3 0 003-3 2 2 0 012 2v6h-4.586l1.293-1.293a1 1 0 00-1.414-1.414l-3 3a1 1 0 000 1.414l3 3a1 1 0 001.414-1.414L10.414 13H15v3a2 2 0 01-2 2H5a2 2 0 01-2-2V5zM15 11h2a1 1 0 110 2h-2v-2z" />
                    </svg>
                </button>
            </div>
            <pre class="p-4 text-gray-100 overflow-x-auto font-mono text-sm"><code>@snippet.Code</code></pre>
        </div>
    </div>
</div>

@if (showCopiedAlert)
{
    <div class="fixed bottom-4 right-4 bg-green-100 border-l-4 border-green-500 text-green-700 p-4 shadow-md rounded-md animate-fadeIn">
        <div class="flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
            </svg>
            <p>Code copied to clipboard!</p>
        </div>
    </div>
}

@code {
    [Parameter]
    public int SnippetId { get; set; }
    
    [Parameter]
    public EventCallback OnBack { get; set; }
    
    private CodeSnippet snippet = new CodeSnippet();
    private bool showCopiedAlert = false;
    
    protected override void OnParametersSet()
    {
        snippet = ProjectService.GetCodeSnippetById(SnippetId);
    }
    
    private async Task CopyCode()
    {
        await JSRuntime.InvokeVoidAsync("navigator.clipboard.writeText", snippet.Code);
        showCopiedAlert = true;
        await Task.Delay(3000);
        showCopiedAlert = false;
    }
}