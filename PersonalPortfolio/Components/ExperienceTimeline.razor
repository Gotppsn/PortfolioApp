@inject ProjectService ProjectService

<div class="relative border-l-4 border-blue-600 dark:border-blue-500 pl-6 ml-4 mb-8">
    @foreach (var experience in ProjectService.GetAllExperiences())
    {
        <div class="mb-10 relative animate-fadeIn" style="animation-delay: @($"{experiences.IndexOf(experience) * 200}ms")">
            <div class="absolute -left-10 mt-1.5 h-6 w-6 rounded-full bg-blue-600 dark:bg-blue-500 flex items-center justify-center">
                <div class="h-3 w-3 rounded-full bg-white"></div>
            </div>
            <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6 hover:shadow-lg transition-shadow duration-300">
                <h3 class="text-xl font-bold text-gray-800 dark:text-white">@experience.Position</h3>
                <div class="text-lg text-gray-600 dark:text-gray-300">@experience.Company | @experience.Location</div>
                <div class="text-sm text-gray-500 dark:text-gray-400 mb-3">
                    @experience.StartDate.ToString("MMM yyyy") - @(experience.Current ? "Present" : experience.EndDate?.ToString("MMM yyyy"))
                </div>
                <p class="mb-4 text-gray-700 dark:text-gray-300">@experience.Description</p>
                <ul class="list-disc list-inside text-sm text-gray-700 dark:text-gray-300 space-y-1">
                    @if (expandedExperienceId == experience.Id)
                    {
                        @foreach (var achievement in experience.Achievements)
                        {
                            <li>@achievement</li>
                        }
                        <li class="text-blue-600 dark:text-blue-400 cursor-pointer mt-2 list-none font-medium hover:text-blue-800 dark:hover:text-blue-300 transition-colors" @onclick="() => ShowAllAchievements(experience.Id)">
                            Show less
                        </li>
                    }
                    else
                    {
                        @foreach (var achievement in experience.Achievements.Take(2))
                        {
                            <li>@achievement</li>
                        }
                        @if (experience.Achievements.Count > 2)
                        {
                            <li class="text-blue-600 dark:text-blue-400 cursor-pointer mt-2 list-none font-medium hover:text-blue-800 dark:hover:text-blue-300 transition-colors" @onclick="() => ShowAllAchievements(experience.Id)">
                                See all achievements (@experience.Achievements.Count)
                            </li>
                        }
                    }
                </ul>
            </div>
        </div>
    }
</div>

@code {
    private int? expandedExperienceId;
    private List<Experience> experiences;

    protected override void OnInitialized()
    {
        experiences = ProjectService.GetAllExperiences();
    }

    private void ShowAllAchievements(int experienceId)
    {
        expandedExperienceId = expandedExperienceId == experienceId ? null : experienceId;
    }
}