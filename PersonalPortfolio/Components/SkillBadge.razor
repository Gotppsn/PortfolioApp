@inject ProjectService ProjectService

<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg overflow-hidden transform hover:-translate-y-1 transition-all duration-300">
    <div class="h-12 bg-gradient-to-r from-blue-600 to-purple-600 flex items-center px-6">
        <h3 class="text-white font-bold">@Category</h3>
    </div>
    <div class="p-6">
        <div class="space-y-5">
            @foreach (var skill in ProjectService.GetSkillsByCategory(Category))
            {
                <div class="animate-on-scroll" style="animation-delay: @($"{Array.IndexOf(ProjectService.GetSkillsByCategory(Category).ToArray(), skill) * 100}ms")">
                    <div class="flex justify-between mb-1 items-center">
                        <div class="flex items-center">
                            @if (!string.IsNullOrEmpty(skill.IconUrl))
                            {
                                <img src="@skill.IconUrl" alt="@skill.Name" class="h-6 w-6 mr-2" />
                            }
                            <span class="font-medium text-gray-800 dark:text-white">@skill.Name</span>
                        </div>
                        <div class="text-sm text-blue-600 dark:text-blue-400 font-semibold bg-blue-100 dark:bg-blue-900/30 px-2 py-0.5 rounded-full">
                            @skill.ProficiencyLevel/5
                        </div>
                    </div>
                    <div class="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-3 overflow-hidden">
                        <div class="bg-gradient-to-r from-blue-600 to-purple-600 h-3 rounded-full transition-all duration-1000" 
                             style="width: @(skill.ProficiencyLevel * 20)%"></div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string Category { get; set; } = string.Empty;
}