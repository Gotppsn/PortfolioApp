@page "/contact"
@inject IJSRuntime JSRuntime
@inject IEmailService EmailService

<PageTitle>Contact - Developer Portfolio</PageTitle>

<div class="container mx-auto px-4 py-8 max-w-4xl">
    <h1 class="text-4xl font-bold mb-8">Contact Me</h1>
    
    <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
        <div class="md:col-span-2">
            <div class="bg-white dark:bg-gray-800 shadow-lg rounded-lg p-8">
                <p class="mb-6 text-gray-700 dark:text-gray-300">
                    I'm always open to discussing new projects, opportunities or partnerships. 
                    Feel free to reach out using the form below!
                </p>
                
                <EditForm Model="@contactForm" OnValidSubmit="HandleValidSubmit">
                    <DataAnnotationsValidator />
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <div class="col-span-1">
                            <label for="name" class="block text-gray-700 dark:text-gray-300 font-medium mb-2">Name</label>
                            <div class="relative">
                                <span class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none text-gray-500">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                                    </svg>
                                </span>
                                <InputText id="name" @bind-Value="contactForm.Name" 
                                        class="w-full pl-10 pr-3 py-2 border border-gray-300 dark:border-gray-700 rounded-md dark:bg-gray-700 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent" />
                            </div>
                            <ValidationMessage For="@(() => contactForm.Name)" class="text-red-600 text-sm mt-1" />
                        </div>
                        
                        <div class="col-span-1">
                            <label for="email" class="block text-gray-700 dark:text-gray-300 font-medium mb-2">Email</label>
                            <div class="relative">
                                <span class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none text-gray-500">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 12a4 4 0 10-8 0 4 4 0 008 0zm0 0v1.5a2.5 2.5 0 005 0V12a9 9 0 10-9 9m4.5-1.206a8.959 8.959 0 01-4.5 1.207" />
                                    </svg>
                                </span>
                                <InputText id="email" @bind-Value="contactForm.Email" 
                                        class="w-full pl-10 pr-3 py-2 border border-gray-300 dark:border-gray-700 rounded-md dark:bg-gray-700 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent" />
                            </div>
                            <ValidationMessage For="@(() => contactForm.Email)" class="text-red-600 text-sm mt-1" />
                        </div>
                        
                        <div class="col-span-2">
                            <label for="subject" class="block text-gray-700 dark:text-gray-300 font-medium mb-2">Subject</label>
                            <div class="relative">
                                <span class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none text-gray-500">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z" />
                                    </svg>
                                </span>
                                <InputText id="subject" @bind-Value="contactForm.Subject" 
                                        class="w-full pl-10 pr-3 py-2 border border-gray-300 dark:border-gray-700 rounded-md dark:bg-gray-700 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent" />
                            </div>
                            <ValidationMessage For="@(() => contactForm.Subject)" class="text-red-600 text-sm mt-1" />
                        </div>
                        
                        <div class="col-span-2">
                            <label for="message" class="block text-gray-700 dark:text-gray-300 font-medium mb-2">Message</label>
                            <div class="relative">
                                <InputTextArea id="message" @bind-Value="contactForm.Message" rows="5"
                                            class="w-full px-3 py-2 border border-gray-300 dark:border-gray-700 rounded-md dark:bg-gray-700 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent" />
                            </div>
                            <ValidationMessage For="@(() => contactForm.Message)" class="text-red-600 text-sm mt-1" />
                        </div>
                    </div>
                    
                    <div class="mt-6">
                        <button type="submit" disabled="@isSending" class="w-full relative bg-gradient-to-r from-blue-500 to-indigo-600 text-white font-bold py-3 px-4 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 hover:from-blue-600 hover:to-indigo-700 transition-all overflow-hidden">
                            <span class="relative z-10">
                                @if (isSending)
                                {
                                    <div class="flex items-center justify-center">
                                        <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                                        </svg>
                                        Sending...
                                    </div>
                                }
                                else
                                {
                                    <span>Send Message</span>
                                }
                            </span>
                        </button>
                    </div>
                </EditForm>
                
                @if (isSubmitted)
                {
                    <div class="mt-6 p-4 bg-green-100 dark:bg-green-900 text-green-700 dark:text-green-200 rounded-md">
                        <div class="flex items-center">
                            <svg class="h-6 w-6 mr-2" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                            </svg>
                            <p class="font-medium">Thank you for your message! I'll get back to you as soon as possible.</p>
                        </div>
                    </div>
                }
                
                @if (hasError)
                {
                    <div class="mt-6 p-4 bg-red-100 dark:bg-red-900 text-red-700 dark:text-red-200 rounded-md">
                        <div class="flex items-center">
                            <svg class="h-6 w-6 mr-2" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>
                            </svg>
                            <p class="font-medium">There was an error sending your message. Please try again later.</p>
                        </div>
                    </div>
                }
            </div>
        </div>
        
        <div class="md:col-span-1 space-y-6">
            <div class="bg-white dark:bg-gray-800 shadow-lg rounded-lg p-6 text-center">
                <div class="text-blue-600 text-3xl mb-3">‚úâ</div>
                <h3 class="font-bold mb-2">Email</h3>
                <p>contact@example.com</p>
            </div>
            
            <div class="bg-white dark:bg-gray-800 shadow-lg rounded-lg p-6 text-center">
                <div class="text-blue-600 text-3xl mb-3">üåê</div>
                <h3 class="font-bold mb-2">Social</h3>
                <div class="flex items-center justify-center space-x-4 mt-2">
                    <a href="https://github.com/yourusername" target="_blank" class="text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors">
                        <svg class="h-6 w-6" fill="currentColor" viewBox="0 0 24 24">
                            <path fill-rule="evenodd" d="M12 2C6.477 2 2 6.484 2 12.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.202 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.943.359.309.678.92.678 1.855 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0022 12.017C22 6.484 17.522 2 12 2z" clip-rule="evenodd" />
                        </svg>
                    </a>
                    <a href="https://linkedin.com/in/yourusername" target="_blank" class="text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors">
                        <svg class="h-6 w-6" fill="currentColor" viewBox="0 0 24 24">
                            <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z" />
                        </svg>
                    </a>
                    <a href="https://twitter.com/yourusername" target="_blank" class="text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors">
                        <svg class="h-6 w-6" fill="currentColor" viewBox="0 0 24 24">
                            <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 14-7.496 14-13.986 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59l-.047-.02z" />
                        </svg>
                    </a>
                </div>
            </div>
            
            <div class="bg-white dark:bg-gray-800 shadow-lg rounded-lg p-6 text-center">
                <div class="text-blue-600 text-3xl mb-3">üìç</div>
                <h3 class="font-bold mb-2">Location</h3>
                <p>Seattle, WA</p>
            </div>
        </div>
    </div>
</div>

@code {
    private ContactForm contactForm = new();
    private bool isSubmitted = false;
    private bool isSending = false;
    private bool hasError = false;
    
    private async Task HandleValidSubmit()
    {
        try
        {
            isSending = true;
            hasError = false;
            isSubmitted = false;
            
            var success = await EmailService.SendEmail(
                contactForm.Name,
                contactForm.Email,
                contactForm.Subject,
                contactForm.Message
            );
            
            if (success)
            {
                isSubmitted = true;
                contactForm = new ContactForm();
            }
            else
            {
                hasError = true;
            }
        }
        catch
        {
            hasError = true;
        }
        finally
        {
            isSending = false;
        }
    }
    
    public class ContactForm
    {
        [Required(ErrorMessage = "Name is required")]
        [StringLength(100, ErrorMessage = "Name cannot exceed 100 characters")]
        public string Name { get; set; } = string.Empty;
        
        [Required(ErrorMessage = "Email is required")]
        [EmailAddress(ErrorMessage = "Invalid email format")]
        public string Email { get; set; } = string.Empty;
        
        [Required(ErrorMessage = "Subject is required")]
        [StringLength(200, ErrorMessage = "Subject cannot exceed 200 characters")]
        public string Subject { get; set; } = string.Empty;
        
        [Required(ErrorMessage = "Message is required")]
        [MinLength(10, ErrorMessage = "Message must be at least 10 characters")]
        [MaxLength(2000, ErrorMessage = "Message cannot exceed 2000 characters")]
        public string Message { get; set; } = string.Empty;
    }
}